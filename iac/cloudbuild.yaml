steps:
  - name: node:21
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "//registry.npmjs.org/:_authToken=$$NPM_TOKEN" > .npmrc
        npm install
        rm -f .npmrc
    secretEnv:
      - 'NPM_TOKEN'
    id: Fetch Dependencies
  - name: node:21
    entrypoint: 'npm'
    args: ['run', 'build']
    id: Build
  - name: node:21
    entrypoint: 'npm'
    args: ['run', 'coverage']
    id: Test
  - name: gcr.io/cloud-builders/docker
    entrypoint: bash
    args:
      - '-c'
      - |
        docker build -t $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA -f Dockerfile --build-arg=NPM_TOKEN=$$NPM_TOKEN .
    secretEnv:
      - 'NPM_TOKEN'
    id: Image
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - >-
        $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
    id: Push
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - >-
        --image=$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
    id: Deploy
    entrypoint: gcloud
images:
  - >-
    $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
options:
  substitutionOption: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY
substitutions:
  _APP_NAME: unassigned
  _SERVICE_NAME: unassigned
  _NPM_TOKEN: unassigned
  _TRIGGER_ID: unassigned-build-trigger
  _DEPLOY_REGION: us-central1
  _AR_HOSTNAME: us-central1-docker.pkg.dev
  _PLATFORM: managed
tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - $_APP_NAME
  - $_SERVICE_NAME
availableSecrets:
  secretManager:
  - versionName: "projects/$PROJECT_ID/secrets/${_APP_NAME}-npm-token/versions/latest"
    env: 'NPM_TOKEN'